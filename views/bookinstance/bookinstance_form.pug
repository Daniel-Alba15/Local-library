extends ../base

block content
  h1=title

  form(method='POST' action='')
    div(class='form-group')
      label(for='book') Book:
      select(id='book' class='form-control' type='select' placeholder='Select book' name='book' required='true')
        - book_list.sort(function(a, b) {let textA = a.title.toUpperCase(); let textB = b.title.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
        for book in book_list
          if bookinstance
            option(value=book._id selected=(bookinstance.book.toString()==book._id.toString() ? 'selected' : false)) #{book.title}
          else
            option(value=book._id) #{book.title}

    div(class='form-group')
      label(for='imprint') Imprint:
      input(id='imprint' class='form-control' type='text' placeholder='Publisher and date information' name='imprint' required='true' value=(undefined===bookinstance ? '' : bookinstance.imprint))
    div(class='form-group')
      label(for='due_back') Date when book available:
      input(id='due_back' class='form-control' type='date' name='due_back' value=(undefined===bookinstance ? '' : bookinstance.due_back))

    div(class='form-group')
      label(for='status') Status:
      select(id='status' class='form-control' type='select' placeholder='Select status' name='status' required='true')
        if status
          each statu in status
            option(value=statu selected=(bookinstance.status==statu ? 'selected' : false)) #{statu}
        //-   option(value='Available' selected=(bookinstance.status=='Available' ? 'selected' : false)) Available
        //-   option(value='Loaned' selected=(bookinstance.status=='Loaned' ? 'selected' : false)) Loaned
        //-   option(value='Reserved' selected=(bookinstance.status=='Reserved' ? 'selected' : false)) Reserved
        //- else
        //-   option(value='Maintenance') Maintenance
        //-   option(value='Available') Available
        //-   option(value='Loaned') Loaned
        //-   option(value='Reserved') Reserved

    button(class='btn btn-primary' type='submit') Submit

  if errors
    ul
      for error in errors
        li!= error.msg